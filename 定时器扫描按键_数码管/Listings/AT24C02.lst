C51 COMPILER V9.60.7.0   AT24C02                                                           10/03/2024 21:24:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE AT24C02
OBJECT MODULE PLACED IN .\Objects\AT24C02.obj
COMPILER INVOKED BY: D:\KEIL_STM32\C51\BIN\C51.EXE ..\I2C\AT24C02.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\AT24C02.lst) OBJECT(.\Objects\AT24C02.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "i2c.h"
   3          
   4          #define AT24C02_Add 0xA0 // AT24C02的设备地址，7位地址加上读写位
   5          
   6          /**
   7           * @brief  AT24c02写入一个字节
   8           * @param  wordAdd要写入的的地址 Data要写入的数据
   9           * @retval 无
  10           */
  11          void AT24C02_writebyte(unsigned char wordAdd, unsigned char Data)
  12          {
  13   1          i2c_start();
  14   1          i2c_sendByte(AT24C02_Add);  // 发送写操作的设备地址（0xA0）
  15   1          i2c_receiveAck();
  16   1          i2c_sendByte(wordAdd);      // 发送存储地址
  17   1          i2c_receiveAck();
  18   1          i2c_sendByte(Data);         // 发送数据
  19   1          i2c_receiveAck();
  20   1          i2c_stop();                 // 停止I2C传输
  21   1      }
  22          
  23          /**
  24           * @brief  AT24c02读取一个字节
  25           * @param  wordAdd要读出的地址 
  26           * @retval 要读出的数据
  27           */
  28          unsigned char AT24C02_receiveByte(unsigned char wordAdd)
  29          {
  30   1          unsigned char Data;
  31   1          i2c_start();
  32   1          i2c_sendByte(AT24C02_Add);      // 发送写操作的设备地址（0xA0）
  33   1          i2c_receiveAck();
  34   1          i2c_sendByte(wordAdd);          // 发送要读取的存储地址
  35   1          i2c_receiveAck();
  36   1      
  37   1          // 重新开始I2C，进入读操作
  38   1          i2c_start();
  39   1          i2c_sendByte(AT24C02_Add | 0x01); // 发送读操作的设备地址（0xA1）
  40   1          i2c_receiveAck();
  41   1          
  42   1          Data = i2c_receiveByte();        // 接收数据
  43   1          i2c_sendAck(1);                  // 发送NACK，表示停止读取
  44   1          i2c_stop();                      // 停止I2C传输
  45   1          return Data;
  46   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     82    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
C51 COMPILER V9.60.7.0   AT24C02                                                           10/03/2024 21:24:42 PAGE 2   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
